generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  HOST
}

model User {
  id           String        @id @default(cuid())
  name         String
  email        String        @unique
  password     String
  role         UserRole      @default(CUSTOMER)
  profileImage String?
  bookings     SeatBooking[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Restaurant {
  id            String       @id @default(cuid())
  ownerid       String
  name          String
  tagline       String?
  location      String
  rating        Float?
  coverImage    String
  openTiming    String
  tableCharge   Int
  isLive        Boolean      @default(false)
  menu          MenuItem[]
  tableLayout   TableLayout?
  cuisineType   String       @default("mix")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  tableLayoutId Int?
}

model TableLayout {
  id            String        @id @default(cuid())
  rows          Int
  cols          Int
  disabledSeats String[]
  selectedSeats String[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  Restaurant    Restaurant    @relation(fields: [restaurantId], references: [id])
  restaurantId  String        @unique
  SeatBookings  SeatBooking[]
}

enum TimeSlote {
  A
  B
  C
  D
  E
  F
}

model SeatBooking {
  id            String      @id @default(cuid())
  seatNumber    String
  bookedAt      DateTime    @default(now())
  TableLayout   TableLayout @relation(fields: [tableLayoutId], references: [id])
  tableLayoutId String
  User          User        @relation(fields: [userId], references: [id])
  userId        String
  totalAmount   Int
  timeSlote     TimeSlote
  preOrder      OrderItem   @relation(fields: [orderItemId], references: [id])
  orderItemId   String
}

model OrderItem {
  id          String        @id @default(cuid())
  foodItem    MenuItem      @relation(fields: [menuItemId], references: [id])
  quantity    Int
  menuItemId  String
  SeatBooking SeatBooking[]
}

model MenuItem {
  id           String      @id @default(cuid())
  dish         String
  description  String?
  price        Float
  Restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId String
  OrderItem    OrderItem[]
}

model Review {
  id           String   @id @default(cuid())
  userId       String
  restaurantId String
  rating       Int
  comment      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
